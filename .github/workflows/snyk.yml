name: Example workflow for Node using Snyk
on: push
jobs:
  security:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
      - uses: actions/checkout@master
      - run: git fetch origin develop --depth=1
      - run: pip install jc
      - name: Run Snyk to check for vulnerabilities
      - run: npm install -g snyk

      - name: package file list
        run: echo "$(git ls-tree --name-only -r HEAD | grep package.json | sed -e 's/^/\//g')" 
      - name: package folder
        run: echo "$(git ls-tree --name-only -r HEAD | grep package.json | sed -e 's/\/package.json//' -e 's/package.json//' -e 's/^/\//g')"
      - name: diff package file list
        run: echo "$(git diff --name-only origin/develop..HEAD | grep package.json | sed -e 's/^/\//g')"
      - name: diff package folder
        run: echo "$(git diff --name-only origin/develop..HEAD | grep package.json | sed -e 's/\/package.json//' -e 's/package.json//' -e 's/^/\//g')"  
      - run: |
          echo "PACKAGE_FOLDER="$(git ls-tree --name-only -r HEAD | grep package.json | sed -e 's/\/package.json//' -e 's/package.json//' -e 's/^/.\//g' | jc --kv | jq keys | jq -c)"" >> $GITHUB_ENV
      - id: step1
        run: echo "test=$PACKAGE_FOLDER" >> $GITHUB_OUTPUT
  job2:
    runs-on: ubuntu-latest
    needs: security
    strategy:
      matrix:
        value: ${{ fromJson(needs.security.outputs.output1) }}
    steps:
      - uses: actions/checkout@master
      - run: cd ${{ matrix.value }} && npm install && snyk monitor --dev --file=package.json
      