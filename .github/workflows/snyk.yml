name: Example workflow for Node using Snyk
on: push
jobs:
  security:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test1 }}
    steps:
      - uses: actions/checkout@master
      - run: git fetch origin develop --depth=1
      - run: pip install jc
      - run: |
          echo "PACKAGE_FOLDER="$(git ls-tree --name-only -r HEAD | grep package.json | sed -e 's/\/package.json//' -e 's/package.json//' -e 's/^/.\//g')"" >> $GITHUB_ENV
      - name: Snyk scan and import for work
        run: |
          npm install -g snyk
          for folder in $PACKAGE_FOLDER
          do
            if [[ $folder = './services'* ]] || [[ $folder = './packages'* ]]; then
              echo $folder
              pushd $folder && npm install
              if [ $(ls | grep -c requirements.txt) -gt 0 ]; then
                pip install -r requirements.txt
                snyk monitor --file=requirements.txt --package-manager=pip
              fi
              if [[ $folder = './services'* ]]; then
                echo yarn
                yarn
                ls
              fi
              snyk monitor --dev --all-projects
              popd
            fi
          done
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
        env:
          SNYK_TOKEN: a7238f10-86dc-4b42-b2ff-a353ac4af51f
      # - name: Build a Docker image
      #   run: |
      #     mkdir -p ~/.docker/cli-plugins && \
      #     curl https://github.com/docker/scan-cli-plugin/releases/latest/download/docker-scan_linux_amd64 -L -s -S -o ~/.docker/cli-plugins/docker-scan &&\
      #     chmod +x ~/.docker/cli-plugins/docker-scan
      #     docker build -t image-to-test .
      #     docker scan
      #   env:
      #     SNYK_TOKEN: a7238f10-86dc-4b42-b2ff-a353ac4af51f
      #   run: docker build -t image-to-test .
      # - name: Run Snyk to check Docker image for vulnerabilities
      #   # Snyk can be used to break the build when it detects vulnerabilities.
      #   # In this case we want to upload the issues to GitHub Code Scanning
      #   continue-on-error: true
      #   uses: snyk/actions/docker@master
      #   env:
      #     # In order to use the Snyk Action you will need to have a Snyk API token.
      #     # See https://docs.snyk.io/integrations/ci-cd-integrations/github-actions-integration#getting-your-snyk-token
      #     # or you can sign up for free at https://snyk.io/login
      #     SNYK_TOKEN: a7238f10-86dc-4b42-b2ff-a353ac4af51f
      #   with:
      #     image: image-to-test
      #     args: --file=Dockerfile --sarif-file-output=snyk.sarif
      #     # command: monitor
      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: snyk.sarif
      # - name: Run Snyk to check for vulnerabilities
      #   uses: snyk/actions/node@master
      #   env:
      #     SNYK_TOKEN: a7238f10-86dc-4b42-b2ff-a353ac4af51f
      #   with:
          # command: monitor
      # - name: docker build
      #   run: |
      #     docker build -t nodejs20:latest .
      #     snyk container monitor nodejs20:latest --file=Dockerfile
      #   env:
      #     SNYK_TOKEN: a7238f10-86dc-4b42-b2ff-a353ac4af51f